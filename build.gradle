plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'io.freefair.lombok' version '5.1.1'
	id 'java'
	id 'jacoco'
}

group = 'br.com.lepsistemas'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'com.tngtech.archunit:archunit-junit5:0.14.1'
	compile 'com.github.pengrad:java-telegram-bot-api:4.9.0'
	compile 'com.ibm.watson:assistant:8.6.0'
	compileOnly 'org.projectlombok:lombok:1.18.12'
}

test {
	useJUnitPlatform()
	excludes = ['**/*Application.java']
}

def jacocoExclude = ['**/*Application.class']

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
    
    afterEvaluate {
        afterEvaluate {
            getClassDirectories().setFrom(classDirectories.files.collect {
                fileTree(dir: it, exclude: jacocoExclude)
            })
        }
    }
}

check.dependsOn jacocoTestReport

tasks.test {
    finalizedBy(tasks.jacocoTestReport)
}

sourceSets {
    architectureTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/test/architecture')
        }
    }
}

task architectureTest(type: Test) {
    testClassesDirs = sourceSets.architectureTest.output.classesDirs
    classpath = sourceSets.architectureTest.runtimeClasspath
} 